version: '3.4'

volumes:
  datausers:
  datahobbies:

services:
  apigateway:
    build:
      context: ./apiGateway
      dockerfile: Dockerfile
    depends_on:
      - usuariosapi
      - hobbiesapi
    ports:
      - "80:80"
    restart: always
    networks:
      - coraisrede

  redisusuarios:
    image: redis
    ports:
      - "6380:6379"
    networks:
      - coraisrede

  dbusuarios:
    image: mysql:8.0.22
    cap_add:
      - SYS_NICE
    ports:
      - "3308:3306"
    volumes:
      - datausers:/var/lib/mysql
      - "~/sql-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usuariodb
    networks:
      - coraisrede

  usuariosapi:
    build:
      context: ./UserApi/UserApi
      dockerfile: Dockerfile
    depends_on:
      - dbusuarios
      - redisusuarios
    ports:
      - "8080:80"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - coraisrede
  
  dbhobbies:
    image: mysql:8.0.22
    ports:
      - "3310:3306"
    volumes:
      - datahobbies:/var/lib/mysql
      - "~/sql-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hobbiesdb
    networks:
      - coraisrede

  hobbiesapi:
    build:
      context: ./AplicationApi/AplicationApi
      dockerfile: Dockerfile
    depends_on:
      - dbhobbies
    ports:
      - "8081:80"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - coraisrede

  coraisfront:
    build:
      context: ./coraisfront
      dockerfile: Dockerfile
    depends_on:
      - usuariosapi
    ports:
      - "4200:4200"
    restart: always
    networks:
      - coraisrede

networks:
  coraisrede:
    driver:
      bridge
